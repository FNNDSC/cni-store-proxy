version: '3.7'

services:
  # cni-and-cube:
  #   image: fnndsc/cni-store-proxy:1.1.0
  #   volumes:
  #     - ./secrets/Test_data_generator.json:/etc/chris-plugins/Test_data_generator.json:ro
  #     - ./secrets/cni_challenge_evaluation.json:/etc/chris-plugins/cni_challenge_evaluation.json:ro
  #   environment:
  #     CNI_COMPUTE_ENV: host
  #     FS_PLUGIN_FILE: /etc/chris-plugins/Test_data_generator.json
  #     EVALUATOR_FILE: /etc/chris-plugins/cni_challenge_evaluation.json
  #   ports:
  #     - "127.0.0.1:8011:8011"
  #   depends_on:
  #     - chris
  #   restart: unless-stopped
  #   networks:
  #     - local

  # cni-proxy:
  #   image: fnndsc/cni-store-proxy:1.0.0
  #   ports:
  #     - "8011:8011"
  # sideloader:
  #   build: ./sideloader

  sideloader:
    image: fnndsc/cni-store-proxy:1.0.0
    command: node src/sideloader.js
    # warning! do not expose any ports
    userns_mode: "host"
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    networks:
      cni-backend:
        aliases:
          - sideload.chris
    restart: unless-stopped
    depends_on:
      - chris

  chris:
    image: fnndsc/chris:2.1.1-rc.1
    ports:
      - "8000:8000"
    depends_on:
      - chris_db
      - swift
      - queue
    networks:
      local:
      cni-backend:
        aliases:
          - cube.chris
    env_file:
      - ./secrets/.chris.env
      - ./secrets/.chris_db.env
      - ./secrets/.swift_service.env
    environment:
      DJANGO_DB_MIGRATE: "on"
      DJANGO_COLLECTSTATIC: "on"
    labels:
      org.chrisproject.role: "cube"
  worker:
    image: fnndsc/chris:2.1.1-rc.1
    command: celery -A core worker -c 4 -l info -Q main1,main2
    env_file:
      - ./secrets/.chris.env
      - ./secrets/.chris_db.env
      - ./secrets/.swift_service.env
    environment:
      DJANGO_DB_MIGRATE: "off"
      DJANGO_COLLECTSTATIC: "off"
    depends_on:
      - chris_db
      - swift
      - queue
      - pfcon
    restart: unless-stopped
    networks:
      - local
  worker_periodic:
    image: fnndsc/chris:2.1.1-rc.1
    environment:
      DJANGO_DB_MIGRATE: "off"
      DJANGO_COLLECTSTATIC: "off"
    command: celery -A core worker -c 2 -l info -Q periodic
    env_file:
      - ./secrets/.chris.env
      - ./secrets/.chris_db.env
      - ./secrets/.swift_service.env
    depends_on:
      - chris_db
      - queue
    restart: unless-stopped
    networks:
      - local
  scheduler:
    image: fnndsc/chris:2.1.1-rc.1
    command: celery -A core beat -l info --pidfile /home/localuser/celerybeat.pid --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./secrets/.chris.env
      - ./secrets/.chris_db.env
      - ./secrets/.swift_service.env
    environment:
      DJANGO_DB_MIGRATE: "off"
      DJANGO_COLLECTSTATIC: "off"
    depends_on:
      - chris_db
      - queue
    restart: unless-stopped
    networks:
      - local
  chris_db:
    image: mysql:5
    env_file:
      - ./secrets/.chris_db.env
    restart: unless-stopped
    volumes:
      - chris_db_data:/var/lib/mysql
    networks:
      - local
  queue:
    image: rabbitmq:3
    restart: unless-stopped
    networks:
      - local


  chris_store:
    image: fnndsc/chris_store:1.1.0
    ports:
      - "8010:8010"
    environment:
      DJANGO_DB_MIGRATE: "on"
      DJANGO_USE_X_FORWARDED_HOST: "true"
    env_file:
      - ./secrets/.chris_store.env
      - ./secrets/.chris_store_db.env
      - ./secrets/.swift_service.env
    depends_on:
      - chris_store_db
      - swift
    restart: unless-stopped
    networks:
      local:
        aliases:
          - chris-store.local
      cni-backend:
        aliases:
          - store.chris
    labels:
      org.chrisproject.role: "chris_store"

  chris_store_db:
    image: mysql:5
    volumes:
      - chris_store_db_data:/var/lib/mysql
    env_file:
      - ./secrets/.chris_store_db.env
    restart: unless-stopped
    networks:
      - local

  swift:
    image: fnndsc/docker-swift-onlyone:latest
    init: true
    volumes:
      - swift_storage:/srv
    env_file:
      - ./secrets/.swift_service.env
    restart: unless-stopped
    networks:
      local:
        aliases:
          - swift_service

  pfcon:
    image: fnndsc/pfcon:3.2.0
    environment:
      COMPUTE_SERVICE_URL: http://pman:5010/api/v1/
      SECRET_KEY: secret
    ports:
      - "127.0.0.1:5005:5005"
    volumes:
      - remote:/home/localuser/storeBase
    networks:
      local:
        aliases:
          - pfcon.local
      compute-env:
    labels:
      org.chrisproject.role: "pfcon"
  pman:
    # https://github.com/FNNDSC/miniChRIS#storebase
    image: fnndsc/pman:3.0.1-rc.1-single
    environment:
      CONTAINER_ENV: swarm
      SECRET_KEY: secret
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    userns_mode: "host"
    depends_on:
      - pfcon
    ports:
      - "127.0.0.1:5010:5010"
    networks:
      - compute-env
    labels:
      org.chrisproject.role: "pman"


networks:
  local:
  cni-backend:
  compute-env:

volumes:
  chris_db_data:
  chris_store_db_data:
  swift_storage:
  remote:
